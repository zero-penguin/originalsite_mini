##案１　水玉模様

from PIL import Image, ImageDraw
import random
import datetime
import os

def create_pattern():
    width = 500
    height = 500
    sentiment = random.uniform(0, 300)
    random_count = random.randint(10, 100)

    # 画像オブジェクトを作成
    image = Image.new("RGB", (width, height), (255, 255, 255))
    draw = ImageDraw.Draw(image)

    # 感情に基づいて模様を描画
    if sentiment >200:
        color = (random.randint(200, 255), random.randint(200, 255), random.randint(200, 255))
    elif sentiment < 100:
        color = (random.randint(0, 100), random.randint(0, 100), random.randint(0, 100))
    else:
        color = (random.randint(100, 200), random.randint(100, 200), random.randint(100, 200))


    # ランダムな模様を追加
    for _ in range(random_count):
        cx = random.randint(0, width)
        cy = random.randint(0, height)
        radius = random.randint(1,110)
        color = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255))

        sentiment = random.uniform(0, 300)

        if sentiment >200:
            color = (random.randint(200, 255), random.randint(200, 255), random.randint(200, 255))
        elif sentiment < 100:
            color = (random.randint(0, 100), random.randint(0, 100), random.randint(0, 100))
        else:
            color = (random.randint(100, 200), random.randint(100, 200), random.randint(100, 200))

        draw.ellipse([(cx - radius, cy - radius), (cx + radius, cy + radius)], fill=color)

    return image

def createimg():
    # 感情に基づいて模様を生成
    image = create_pattern()

    # 一時的なファイルパスを作成して画像を保存
    now = datetime.datetime.now()
    directory = "create/createimg"  # 保存先ディレクトリのパスを指定
    filename = f"create_image_{now.strftime('%Y%m%d%H%M%S')}.png"
    file_path = os.path.join(directory, filename)
    image.save(file_path)



##案２　星空を生成
from PIL import Image, ImageDraw
import random
import datetime
import os

def create_pattern():
    width = 800
    height = 800
    sentiment = random.uniform(0, 300)
    random_count = random.randint(80, 100)
    start = 0
    midlle = 0.5

    # 画像オブジェクトを作成
    image = Image.new("RGB", (width, height), (255, 255, 255))
    draw = ImageDraw.Draw(image)

    # 感情に基づいて模様を描画
    if sentiment >200:
        color = (25, 25, 112)
    elif sentiment < 100:
        color = (0, 0, 51)
    else:
        color = (51, 0, 0)

    # 夜空色
    draw.rectangle([(0, 0), (width, height)], fill=color, outline=None)

    # ランダムな模様を追加
    for _ in range(random_count):
        cx1 = random.gauss(start, 0.2) * width
        cy1 = random.gauss(start, 0.2) * height
        radius = random.weibullvariate(0.1, 3)

        sentiment = random.uniform(0, 300)

        if sentiment >200:
            color = (245,245,255)
        elif sentiment < 100:
            color =  (255, 245, 245)
        else:
            color =  (245, 255, 245)

        draw.ellipse([(cx1 - radius, cy1 - radius), (cx1 + radius, cy1 + radius)], fill=color)

        for _ in range(random_count):
            cx = random.gauss(midlle, 0.2) * width
            cy = random.gauss(midlle, 0.2) * height
            radius = random.weibullvariate(0.1, 3)

            sentiment = random.uniform(0, 300)

            if sentiment >200:
                color = (245,245,255)
            elif sentiment < 100:
                color =  (255, 245, 245)
            else:
                color =  (245, 255, 245)

            draw.ellipse([(cx - radius, cy - radius), (cx + radius, cy + radius)], fill=color)

    return image

def createimg():
    # 感情に基づいて模様を生成
    image = create_pattern()

    # 一時的なファイルパスを作成して画像を保存
    now = datetime.datetime.now()
    directory = "create/createimg"  # 保存先ディレクトリのパスを指定
    filename = f"create_image_{now.strftime('%Y%m%d%H%M%S')}.png"
    file_path = os.path.join(directory, filename)
    image.save(file_path)